# -*- coding: utf-8 -*-
"""
/***************************************************************************
 Database functions
                                 A QGIS plugin
 This plugin classifying runways types based on their patterns
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2019-04-25
        git sha              : $Format:%H$
        copyright            : (C) 2019 by Jenya Brodski
        email                : jekab596@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

from pymongo import MongoClient


def dbConnect():
    """
    Connecting to database

    :return: Cursor to database cluster
    :rtype: cursor
    """

    # Connection to the cloud
    client = MongoClient("mongodb://127.0.0.1:27017")

    # Connection to the specific database
    db = client.get_database('airports_db')

    # Cluster
    records = db.airport_records
    return records

def insertRecords(connection, data):
    """
    Insert data to database

    :param connection: Connection to the specific cluster in database
    :param data: Data that we want to insert to the database
    """
    connection.insert_many(data)

def findRecords(connection,i):
    """
    Find records in database

    :param connection: Connection to the specific cluster in database
    :param i: Airports with 'i' number of runways
    :return: Records from database
    """
    selected_records = connection.find({"runways_num":i})
    return selected_records

